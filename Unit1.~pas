unit Unit1;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, Grids, Buttons, ComCtrls, FileCtrl, DB, ADODB;

type
  TForm1 = class(TForm)
    Edit1: TEdit;
    SpeedButton1: TSpeedButton;
    Edit2: TEdit;
    Label1: TLabel;
    Label2: TLabel;
    CheckBox1: TCheckBox;
    Memo1: TMemo;
    Edit3: TEdit;
    Label3: TLabel;
    StringGrid1: TStringGrid;
    Label4: TLabel;
    Label5: TLabel;
    SpeedButton2: TSpeedButton;
    StatusBar1: TStatusBar;
    SpeedButton3: TSpeedButton;
    ADOConnection1: TADOConnection;
    ListBox1: TListBox;
    procedure SpeedButton1Click(Sender: TObject);
    procedure SpeedButton2Click(Sender: TObject);
    procedure SpeedButton3Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

uses StrUtils;

{$R *.dfm}

function pole(i:integer;str:string):string;
 function data(coords:string):string;
 var
  p:integer;
  s1,s2:string;
 begin
  p:=pos(':',coords);
  s1:=copy(coords,1,p-1);
  s2:=copy(coords,p+1,length(coords)+p+1);
  result:=trim(copy(str,StrToInt(s1),StrToInt(s2)-StrToInt(s1)));
 end;
var
 s:string;
 p:integer;
begin
 result:='';
 with Form1.Memo1 do begin
  s:=trim(Lines[i]);
  p:= pos('-',s);
  if p>0 then s:=copy(s,p+1,length(s)-p+1);
  result := data(s);
 end;
end;

function shapka(i:integer):string;
var
 p:integer;
 s:string;
begin
 with Form1.Memo1 do begin
  s:=trim(Lines[i]);
  p:= pos('-',s);
  if p>0 then s:=copy(s,1,p-1);
  result:=s
 end; //with
end;

function datas(str:string):string;
begin
 insert(':',str,11); insert(':',str,9);
 insert(' ',str,7);
 insert('/20',str,5); insert('/',str,3);
 result := str;
end;

procedure resizesg;
var
 i,j,max:integer;
begin
 with Form1.StringGrid1 do begin
  for i:=0 to ColCount-1 do begin
   max:=10;
   for j:=1 to RowCount-1 do if max<Canvas.TextWidth(Cells[i,j])+6 then max:=Canvas.TextWidth(Cells[i,j])+6;
   ColWidths[i]:=max;
  end;
 end;
end;

function nullsclear(cl,str:string):string;
var
 p,i,j:integer;
 s1,s2:string;
begin
 if AnsiIndexStr(cl,['C','Si','Mn','P','S','Cr','Ni','Mo','Al','Cu','Co',
 'Ti','Nb','V','W','Pb','B','Sn','Zn','As','Bi','Ca','Ce','Zr','La','Fe'])>-1 then begin
  p:=pos('.',str);
  s1:=copy(str,1,p-1);
  s2:=copy(str,p+1,length(str)-p+1);
  if s1[length(s1)]='0' then begin
   I := 0;
    while I <= Length(s1) do begin
     Inc(I);
     if (s1[I] = '0') then begin
      repeat
       J := I;
       Inc(j);
       if s1[j] = '0' then Delete(s1, j, 1);
      until s1[j] <> '0';
      I := J;
     end; //if
    end; //while
  end else begin
   I := 1;
   while I <= Length(s1) do if (s1[I] = '0') then Delete(s1, i, 1) else Inc(I);
  end; //if s1[......
  result:=s1+'.'+s2;
 end; //if AnsiInd.......
end;

procedure TForm1.SpeedButton1Click(Sender: TObject);
var
 i,z: Integer;
 f: TextFile;
 t: string;
begin
 if trim(Edit3.Text)='' then Edit3.Text:='1';
 if trim(Edit2.Text)='' then Edit2.Text:='25';
 AssignFile(f,Edit1.Text);
 Memo1.Lines.LoadFromFile(ExtractFilePath(ParamStr(0))+'1.txt');
 Memo1.Text:=trim(Memo1.Text);
 StringGrid1.ColCount:=Memo1.Lines.Count;
 StringGrid1.RowCount:=2;
 ListBox1.Items.Clear;
 for i:=1 to StringGrid1.ColCount-1 do StringGrid1.Cells[i,0]:=shapka(i-1);
 Reset(f);
 z := 0;
 repeat
  Inc(z);
  readln(f, t);
  if z>=StrToInt(Edit3.Text) then begin
   StringGrid1.RowCount:=StringGrid1.RowCount+1;
   StringGrid1.Cells[0,StringGrid1.RowCount-2]:=IntToStr(z);
   for i:=1 to StringGrid1.ColCount-1 do StringGrid1.Cells[i,StringGrid1.RowCount-2]:=Trim(pole(i-1,t));
   for i:=10 to 36 do StringGrid1.Cells[i,StringGrid1.RowCount-2]:=nullsclear(StringGrid1.Cells[i,0],StringGrid1.Cells[i,StringGrid1.RowCount-2]);
   if StringGrid1.Cells[1,0] = 'DataTime' then
    ListBox1.Items.Add(StringGrid1.Cells[1,StringGrid1.RowCount-2]);
    StringGrid1.Cells[1,StringGrid1.RowCount-2]:=datas(StringGrid1.Cells[1,StringGrid1.RowCount-2]);
  end; //if z>=......
 until EOF(f) or (z>=(StrToInt(Edit3.Text)+StrToInt(Edit2.Text))-1);
 Label5.Caption:=IntToStr(z);
 StringGrid1.RowCount:=StringGrid1.RowCount-1;
 CloseFile(f);
 resizesg;
end;

procedure TForm1.SpeedButton2Click(Sender: TObject);
var
 Path:String;
begin
 SelectDirectory('Выбери папку','',Path);
 if Trim(Path)<>'' then Edit1.Text:=Path+'\ANALYSEN.DAT';
 Edit1.Text:=StringReplace(Edit1.Text,'\\','\',[rfReplaceAll]);
end;

procedure TForm1.SpeedButton3Click(Sender: TObject);
var
 i:integer;
begin
 try
  ADOConnection1.Open;
  for i:=1 to StringGrid1.RowCount-1 do
   ADOConnection1.Execute('INSERT INTO SPECTROMETR (id,DATATIME,MILLORDER,QUALITY,HEAT,LOT,SAMPLE,SPECIMEN,METHOD) VALUES ('''
    +ListBox1.Items[i-1]+''','''+StringGrid1.Cells[1,i]+''','''+StringGrid1.Cells[2,i]+''','''
    +StringGrid1.Cells[3,i]+''','''+StringGrid1.Cells[4,i]+''','''+StringGrid1.Cells[5,i]+''','''
    +StringGrid1.Cells[6,i]+''','''+StringGrid1.Cells[7,i]+''','''+StringGrid1.Cells[9,i]+''')');
 finally
  ADOConnection1.Close;
 end; //try
end;

end.
